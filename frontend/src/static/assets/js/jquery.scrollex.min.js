import React, { useEffect, useRef, useState } from 'react';

const useScrollex = ({ top = 0, bottom = 0, onEnter, onLeave, onScroll }) => {
  const elementRef = useRef(null);
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const element = elementRef.current;
    if (!element) return;

    const handleScroll = () => {
      const elementRect = element.getBoundingClientRect();
      const windowHeight = window.innerHeight;

      const topPosition = elementRect.top + top;
      const bottomPosition = elementRect.bottom - bottom;

      const isInView = bottomPosition >= 0 && topPosition <= windowHeight;

      if (isInView && !isVisible) {
        setIsVisible(true);
        if (onEnter) onEnter();
      } else if (!isInView && isVisible) {
        setIsVisible(false);
        if (onLeave) onLeave();
      }

      if (onScroll) {
        const scrollProgress = Math.min(
          1,
          Math.max(0, (windowHeight / 2 - topPosition) / (bottomPosition - topPosition))
        );
        onScroll(scrollProgress);
      }
    };

    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Run on mount

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [isVisible, top, bottom, onEnter, onLeave, onScroll]);

  return elementRef;
};

const ScrollexComponent = () => {
  const handleEnter = () => {
    console.log('Entered the viewport!');
  };

  const handleLeave = () => {
    console.log('Left the viewport!');
  };

  const handleScroll = (progress) => {
    console.log(`Scroll progress: ${progress}`);
  };

  const scrollexRef = useScrollex({
    top: 0,
    bottom: 0,
    onEnter: handleEnter,
    onLeave: handleLeave,
    onScroll: handleScroll,
  });

  return (
    <div>
      <div style={{ height: '150vh' }}>Scroll down to see the effect</div>
      <div
        ref={scrollexRef}
        style={{ height: '100px', background: 'lightblue' }}
      >
        Watch me!
      </div>
      <div style={{ height: '150vh' }}>Keep scrolling...</div>
    </div>
  );
};

export default ScrollexComponent;
